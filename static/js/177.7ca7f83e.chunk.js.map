{"version":3,"file":"static/js/177.7ca7f83e.chunk.js","mappings":"qJAuEA,QArEA,SAAkBA,GAAsB,IAArB,KAAEC,EAAI,SAAEC,GAAUF,EACnC,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KAE3CK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GACvEX,EAAYO,EAAe,GAC1B,IAEH,MAoBMK,EAAeb,EAASc,QAC5BC,GAAOA,EAAIC,WAAalB,EAAKmB,IAAMF,EAAIG,cAAgBpB,EAAKmB,KAG9D,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAC1BR,EAAaU,KAAIR,IAChBI,EAAAA,EAAAA,MAAA,OAAkBC,UAAS,WAAAI,OAAaT,EAAIC,WAAalB,EAAKmB,GAAK,OAAS,YAAaI,SAAA,EACvFF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAIN,EAAIC,WAAalB,EAAKmB,GAAE,OAAAO,OAAUT,EAAIU,eAAa,SAAAD,OAAcT,EAAIW,YAAa,KAAGX,EAAIY,YAC7FL,EAAAA,EAAAA,KAAA,SAAAD,SAAQ,IAAIO,KAAKb,EAAIc,WAAWC,qBAFxBf,EAAIE,SAMlBE,EAAAA,EAAAA,MAAA,QAAMY,SAnCiBC,IAEzB,GADAA,EAAEC,iBACwB,KAAtB9B,EAAW+B,SAAkB7B,EAAW,OAE5C,MAAM8B,EAAU,CACdlB,GAAIW,KAAKQ,MACTpB,SAAUlB,EAAKmB,GACfS,WAAY5B,EAAKuC,SACjBnB,YAAaoB,SAASjC,GACtBoB,cAAe1B,EAASwC,MAAKC,GAAKA,EAAEvB,KAAOqB,SAASjC,KAAYgC,SAChEV,QAASxB,EACT0B,WAAW,IAAID,MAAOa,eAGlBC,EAAkB,IAAI1C,EAAUmC,GACtClC,EAAYyC,GACZ/B,aAAagC,QAAQ,WAAYlC,KAAKmC,UAAUF,IAChDtC,EAAc,GAAG,EAkBmBiB,SAAA,EAChCF,EAAAA,EAAAA,MAAA,UACE0B,MAAOxC,EACPyC,SAAWd,GAAM1B,EAAa0B,EAAEe,OAAOF,OACvCG,UAAQ,EAAA3B,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQuB,MAAM,GAAExB,SAAC,yCAChBtB,EAASe,QAAO0B,GAAKA,EAAEvB,KAAOnB,EAAKmB,KAAIM,KAAIiB,IAC1ClB,EAAAA,EAAAA,KAAA,UAAmBuB,MAAOL,EAAEvB,GAAGI,SAAEmB,EAAEH,UAAtBG,EAAEvB,UAGnBK,EAAAA,EAAAA,KAAA,SACE2B,KAAK,OACLJ,MAAO1C,EACP2C,SAAWd,GAAM5B,EAAc4B,EAAEe,OAAOF,OACxCK,YAAY,mDACZF,UAAQ,KAEV1B,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAAQ5B,SAAC,sBAI9B,C","sources":["components/Messaging.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Messaging({ user, allUsers }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [recipient, setRecipient] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedMessages = JSON.parse(localStorage.getItem('messages')) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.trim() === '' || !recipient) return;\r\n\r\n    const message = {\r\n      id: Date.now(),\r\n      senderId: user.id,\r\n      senderName: user.username,\r\n      recipientId: parseInt(recipient),\r\n      recipientName: allUsers.find(u => u.id === parseInt(recipient)).username,\r\n      content: newMessage,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const updatedMessages = [...messages, message];\r\n    setMessages(updatedMessages);\r\n    localStorage.setItem('messages', JSON.stringify(updatedMessages));\r\n    setNewMessage('');\r\n  };\r\n\r\n  const userMessages = messages.filter(\r\n    msg => msg.senderId === user.id || msg.recipientId === user.id\r\n  );\r\n\r\n  return (\r\n    <div className=\"messaging\">\r\n      <h2>メッセージ</h2>\r\n      <div className=\"message-list\">\r\n        {userMessages.map(msg => (\r\n          <div key={msg.id} className={`message ${msg.senderId === user.id ? 'sent' : 'received'}`}>\r\n            <p>{msg.senderId === user.id ? `To: ${msg.recipientName}` : `From: ${msg.senderName}`}: {msg.content}</p>\r\n            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSendMessage}>\r\n        <select\r\n          value={recipient}\r\n          onChange={(e) => setRecipient(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">受信者を選択</option>\r\n          {allUsers.filter(u => u.id !== user.id).map(u => (\r\n            <option key={u.id} value={u.id}>{u.username}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"メッセージを入力\"\r\n          required\r\n        />\r\n        <button type=\"submit\">送信</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messaging;"],"names":["_ref","user","allUsers","messages","setMessages","useState","newMessage","setNewMessage","recipient","setRecipient","useEffect","storedMessages","JSON","parse","localStorage","getItem","userMessages","filter","msg","senderId","id","recipientId","_jsxs","className","children","_jsx","map","concat","recipientName","senderName","content","Date","timestamp","toLocaleString","onSubmit","e","preventDefault","trim","message","now","username","parseInt","find","u","toISOString","updatedMessages","setItem","stringify","value","onChange","target","required","type","placeholder"],"sourceRoot":""}